Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Instance00001')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    INSTANCEDECL
      PsiElement(HaskellTokenType.instance)('instance')
      PPRAGMA
        PsiElement(HaskellTokenType.{-#)('{-#')
        PsiElement(HaskellTokenType.PRAGMA)('OVERLAPPABLE')
        PsiElement(HaskellTokenType.#-})('#-}')
      CTYPE
        CLSCONTEXT
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('Foo')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('a')
        PsiElement(HaskellTokenType.=>)('=>')
        CTYPE
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Bar')
            ATYPE
              TYVAR
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('a')
      PsiElement(HaskellTokenType.where)('where')
      IDECL
        FUNORPATDECL
          PAT
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('foo')
          RHS
            PsiElement(HaskellTokenType.=)('=')
            EXP
              QVAR
                QVARID
                  VARID
                    PsiElement(HaskellTokenType.varidRegexp)('bar')