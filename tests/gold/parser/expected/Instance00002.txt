Haskell File
  MODULEDECL
    PsiElement(HaskellTokenType.module)('module')
    QCONID
      CONID
        PsiElement(HaskellTokenType.conidRegexp)('Instance00002')
    PsiElement(HaskellTokenType.where)('where')
  BODY
    NEWTYPEDECL
      PsiElement(HaskellTokenType.newtype)('newtype')
      TYCON
        CONID
          PsiElement(HaskellTokenType.conidRegexp)('FooT')
      TYVAR
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('m')
      TYVAR
        VARID
          PsiElement(HaskellTokenType.varidRegexp)('a')
      PsiElement(HaskellTokenType.=)('=')
      NEWCONSTR
        CON
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('FooT')
        ATYPE
          PsiElement(HaskellTokenType.{)('{')
          VARS
            VARID
              PsiElement(HaskellTokenType.varidRegexp)('unFooT')
          PsiElement(HaskellTokenType.::)('::')
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('ReaderT')
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('Foo')
            ATYPE
              TYVAR
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('m')
            ATYPE
              TYVAR
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('a')
          PsiElement(HaskellTokenType.})('}')
      PsiElement(HaskellTokenType.deriving)('deriving')
      PsiElement(HaskellTokenType.newtype)('newtype')
      PsiElement(HaskellTokenType.()('(')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Functor')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('MonadIO')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Applicative')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('Monad')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('MonadTrans')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('MonadThrow')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('MonadCatch')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('MonadLogger')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('MonadMask')
      PsiElement(HaskellTokenType.,)(',')
      QTYCLS
        TYCLS
          CONID
            PsiElement(HaskellTokenType.conidRegexp)('MonadResource')
      PsiElement(HaskellTokenType.))(')')
    DERIVINGDECL
      PsiElement(HaskellTokenType.deriving)('deriving')
      PsiElement(HaskellTokenType.newtype)('newtype')
      PsiElement(HaskellTokenType.instance)('instance')
      CTYPE
        CLSCONTEXT
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('MonadBase')
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('IO')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('m')
        PsiElement(HaskellTokenType.=>)('=>')
        CTYPE
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('MonadBase')
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('IO')
            ATYPE
              PsiElement(HaskellTokenType.()('(')
              CTYPE
                TYPEE
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('FooT')
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('m')
              PsiElement(HaskellTokenType.))(')')
    DERIVINGDECL
      PsiElement(HaskellTokenType.deriving)('deriving')
      PsiElement(HaskellTokenType.newtype)('newtype')
      PsiElement(HaskellTokenType.instance)('instance')
      CTYPE
        CLSCONTEXT
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('MonadBaseControl')
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('IO')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('m')
        PsiElement(HaskellTokenType.=>)('=>')
        CTYPE
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('MonadBaseControl')
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('IO')
            ATYPE
              PsiElement(HaskellTokenType.()('(')
              CTYPE
                TYPEE
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('FooT')
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('m')
              PsiElement(HaskellTokenType.))(')')
    DERIVINGDECL
      PsiElement(HaskellTokenType.deriving)('deriving')
      PsiElement(HaskellTokenType.newtype)('newtype')
      PsiElement(HaskellTokenType.instance)('instance')
      CTYPE
        CLSCONTEXT
          ATYPE
            OQTYCON
              QTYCON
                TYCON
                  CONID
                    PsiElement(HaskellTokenType.conidRegexp)('MonadError')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('e')
          ATYPE
            TYVAR
              VARID
                PsiElement(HaskellTokenType.varidRegexp)('m')
        PsiElement(HaskellTokenType.=>)('=>')
        CTYPE
          TYPEE
            ATYPE
              OQTYCON
                QTYCON
                  TYCON
                    CONID
                      PsiElement(HaskellTokenType.conidRegexp)('MonadError')
            ATYPE
              TYVAR
                VARID
                  PsiElement(HaskellTokenType.varidRegexp)('e')
            ATYPE
              PsiElement(HaskellTokenType.()('(')
              CTYPE
                TYPEE
                  ATYPE
                    OQTYCON
                      QTYCON
                        TYCON
                          CONID
                            PsiElement(HaskellTokenType.conidRegexp)('FooT')
                  ATYPE
                    TYVAR
                      VARID
                        PsiElement(HaskellTokenType.varidRegexp)('m')
              PsiElement(HaskellTokenType.))(')')